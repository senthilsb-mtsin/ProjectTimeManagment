@model TimeManagement.ViewModel.BillingModel
@{
    ViewBag.Title = "MonthlyBilling";
}
<script type="text/javascript">

    function datevalidate() {
        var fromdate = $('#fromdate').val();
        var todate = $('#todate').val();

        if ((Date.parse(fromdate) > Date.parse(todate))) {
            alert("To Date should be greater than From date.");
            document.getElementById("todate").value = "";
            return false;
        }

        return true;

    }
    function fundate() {
        var fromdate = $('#fromdate').val();
        var todate = $('#todate').val();
        if ((fromdate == "") && (todate == "")) {
            $('#fdate').removeClass('hidden');
            $('#tdate').removeClass('hidden');
            return false;
        } else if ((fromdate != "") && (todate == "")) {
            $('#fdate').addClass('hidden');
            $('#tdate').removeClass('hidden');
            return false;
        } else if ((fromdate == "") && (todate != "")) {
            $('#fdate').removeClass('hidden');
            $('#tdate').addclass('hidden');
            return false;
        }
        if (datevalidate() == false) {
            return false;
        }
        return true;
    }


    $(document).ready(function () {

        //Export button click event on batch list page
        $("#btnExport").click(function () {
            location.href = '@Url.Content("~/Report/ExportBillingDetails")';
        });

        $("#fromdate").change(function () {
            var fromdate = $('#fromdate').val();
            if (fromdate == "") {
                $('#fdate').removeClass('hidden');
                return false;
            } else if (fromdate != "") {
                $('#fdate').addClass('hidden');
                return false;
            }
            return true;

        });

        $("#todate").change(function () {
            var todate = $('#todate').val();
            if (todate == "") {
                $('#tdate').removeClass('hidden');
                return false;
            } else if (todate != "") {
                $('#tdate').addClass('hidden');
                return false;
            }
            return true;

        });

      
    });



    $(document).ready(function () {

        oTable = $('#BillingdataTable').dataTable({
            "fnDrawCallback": function (oSettings) {
                if (oSettings.aiDisplay.length == 0) {
                    return;
                }

                // var nTrs = $("#BillingdataTable").dataTable().fnGetNodes();
                var nTrs = $('#BillingdataTable tbody tr');
                var iColspan = nTrs[0].getElementsByTagName('td').length;
                var GroupText;
                var TotalHours = 0;
                var TotalCost = 0;
                var SubTotalHours = 0;
                var SubTotalCost = 0;
                var sLastGroup = "";
                for (var i = 0; i < nTrs.length; i++) {
                    var iDisplayIndex = oSettings._iDisplayStart + i;

                    var sGroup = oSettings.aoData[oSettings.aiDisplay[iDisplayIndex]]._aData[0];
                    var SHours = oSettings.aoData[oSettings.aiDisplay[iDisplayIndex]]._aData[5];
                    var SCost = oSettings.aoData[oSettings.aiDisplay[iDisplayIndex]]._aData[6];
                    var Nextvalue = iDisplayIndex == nTrs.length - 1 ? iDisplayIndex : iDisplayIndex + 1;
                    sLastGroup = i == 0 && nTrs.length == 1 ? oSettings.aoData[oSettings.aiDisplay[Nextvalue - 1]]._aData[0] : i == 0 ? oSettings.aoData[oSettings.aiDisplay[Nextvalue]]._aData[0] : sLastGroup;


                    if (sGroup != sLastGroup) {
                        var nGroup = document.createElement('tr');
                        var nCell = document.createElement('td');
                        var nhours = document.createElement('td');
                        var nCost = document.createElement('td');
                        nCell.colSpan = 4;
                        nCell.className = "strong";
                        nhours.className = "strong";
                        nCost.className = "strong";
                        nCell.innerHTML = GroupText;
                        nhours.innerHTML = SubTotalHours.toFixed(2);
                        nCost.innerHTML = "$" + SubTotalCost.toFixed(2);
                        nGroup.appendChild(nCell);
                        nGroup.appendChild(nhours);
                        nGroup.appendChild(nCost);
                        nTrs[i].parentNode.insertBefore(nGroup, nTrs[i]);
                        if (nTrs.length == i + 1) {
                            TotalHours = parseFloat(TotalHours) + parseFloat(SubTotalHours) + parseFloat(SHours);
                            TotalCost = parseFloat(TotalCost) + parseFloat(SubTotalCost) + parseFloat(SCost.substr(1, SCost.length));
                        }
                        else {
                            TotalHours = parseFloat(TotalHours) + parseFloat(SubTotalHours);
                            TotalCost = parseFloat(TotalCost) + parseFloat(SubTotalCost);
                        }

                        if (nTrs.length == i + 1) {
                            var TotalGroup = document.createElement('tr');
                            var TCell = document.createElement('td');
                            var Thours = document.createElement('td');
                            var TCost = document.createElement('td');
                            TCell.colSpan = 4;
                            TCell.className = "group";
                            TCell.innerHTML = "Total";
                            Thours.innerHTML = TotalHours.toFixed(2);
                            TCost.innerHTML = "$" + TotalCost.toFixed(2);
                            TotalGroup.appendChild(TCell);
                            TotalGroup.appendChild(Thours);
                            TotalGroup.appendChild(TCost);
                            $("#BillingdataTable").find("tbody tr:last").after(TotalGroup);
                            SubTotalHours = 0;
                            SubTotalCost = 0;
                        }
                        else {
                            SubTotalHours = parseFloat(SHours)
                            SubTotalCost = parseFloat(SCost.substr(1, SCost.length))
                        }
                        sLastGroup = sGroup;
                    }
                    else {

                        SubTotalHours = parseFloat(SubTotalHours) + parseFloat(SHours)
                        SubTotalCost = parseFloat(SubTotalCost) + parseFloat(SCost.substr(1, SCost.length))
                        GroupText = "Sub Total for " + sGroup.substr(1, sGroup.length);
                        if (nTrs.length == i + 1) {
                            var nGroup = document.createElement('tr');
                            var nCell = document.createElement('td');
                            var nhours = document.createElement('td');
                            var nCost = document.createElement('td');
                            nCell.colSpan = 4;
                            nCell.className = "strong";
                            nhours.className = "strong";
                            nCost.className = "strong";
                            nCell.innerHTML = GroupText;
                            nhours.innerHTML = SubTotalHours.toFixed(2);
                            nCost.innerHTML = "$" + SubTotalCost.toFixed(2);
                            nGroup.appendChild(nCell);
                            nGroup.appendChild(nhours);
                            nGroup.appendChild(nCost);
                            $("#BillingdataTable").find("tbody tr:last").after(nGroup);
                            TotalHours = parseFloat(TotalHours) + parseFloat(SubTotalHours)
                            TotalCost = parseFloat(TotalCost) + parseFloat(SubTotalCost)
                            SubTotalHours = 0;
                            SubTotalCost = 0;
                            var TotalGroup = document.createElement('tr');
                            var TCell = document.createElement('td');
                            var Thours = document.createElement('td');
                            var TCost = document.createElement('td');
                            TCell.colSpan = 4;
                            TCell.className = "strongBig";
                            Thours.className = "strongBig";
                            TCost.className = "strongBig";
                            TCell.innerHTML = "Total";
                            Thours.innerHTML = TotalHours.toFixed(2);
                            TCost.innerHTML = "$" + TotalCost.toFixed(2);
                            TotalGroup.appendChild(TCell);
                            TotalGroup.appendChild(Thours);
                            TotalGroup.appendChild(TCost);
                            $("#BillingdataTable").find("tbody tr:last").after(TotalGroup);

                        }
                    }

                }
            },
            "aoColumnDefs": [
			{ "bVisible": false, "aTargets": [0] }
		],
            "aaSortingFixed": [[0, 'asc']],
            "aaSorting": [[0, 'asc']],
            "bPaginate": false,
            //"sDom": 'lfr<"giveHeight"t>ip',
            // "sPaginationType": "bootstrap",
            "sDom": "<'row'<'span6'l><'span6'f>r>t<'row'<'span6'i><'span6'p>>"
        });
    });

</script>
<div class="row">
    <div class="boxshade">
        <div class="boxhead">
            Monthly Billing Report
        </div>
        <div class="boxbody">
            <div class="col-lg-12 pad10 gap-bottom10" style="background-color: #F5F5F5;">
                <div class="col-lg-12 gap-bottom10">
                    @using (Html.BeginForm("MonthlyBilling", "Report", FormMethod.Post, new { @class = "form-inline" }))
                    {
                        <div class="col-lg-2">
                            <div class="col-lg-12 pad0 gap-bottom5">
                                <b>From Date</b></div>
                            <div class="col-lg-12 pad0">
                                <input type="text" class="form-control datePicker required" placeholder="From" name="fromDate"
                                    id="fromdate" />
                                <div id="fdate" class="hidden requi">
                                    From Date Required</div>
                            </div>
                        </div>
                 
                        <div class="col-lg-2">
                            <div class="col-lg-12 pad0 gap-bottom5">
                                <b>To Date</b></div>
                            <div class="col-lg-12 pad0">
                                <input type="text" class="form-control datePicker required" placeholder="To" name="toDate"
                                    id="todate" />
                                <div id="tdate" class="hidden requi">
                                    To Date Required</div>
                            </div>
                        </div>
                        <div class="col-lg-12 gap-top5">
                            <button type="submit" class="btn btn-info pull-right gap-right10" onclick="return fundate();">
                            Submit</button>
                        </div>
                        
                       
                        
                    }
                </div>
                <div class="col-lg-12">
                    <span style="font-size: 12px">@ViewBag.Message</span>
                </div>
            </div>
            @if (Model != null && Model.Summary.Count > 0)
            {
                <div class="col-lg-12 gap-bottom10">
                    <table id="BillingdataTable" class="table table-striped table-bordered" style="font-size: 12px">
                        <thead>
                            <tr>
                                <th style="background-color: #2481B7; color: #FFF">
                                    GroupBy
                                </th>
                                <th style="background-color: #2481B7; color: #FFF">
                                    Company
                                </th>
                                <th style="background-color: #2481B7; color: #FFF">
                                    Consultant
                                </th>
                                <th style="background-color: #2481B7; color: #FFF">
                                    Task
                                </th>
                                <th style="background-color: #2481B7; color: #FFF">
                                    Rate/Hr
                                </th>
                                <th style="background-color: #2481B7; color: #FFF">
                                    Hours
                                </th>
                                <th style="background-color: #2481B7; color: #FFF">
                                    Billable Amount
                                </th>
                            </tr>
                        </thead>
                        @{
                decimal total = 0;
                foreach (TimeManagement.Domain.WorkSummary workSummary in Model.Summary)
                {
                    total = 0;
                        
                            <tr>
                                <td style="text-align: right">
                                    $@workSummary.Company
                                </td>
                                <td style="text-align: left">@workSummary.Company
                                </td>
                                <td style="text-align: left">@workSummary.Employee
                                </td>
                                <td style="text-align: left">@workSummary.WorkCode
                                </td>
                                <td style="text-align: right">
                                    $@workSummary.BillRate
                                </td>
                                <td style="text-align: center">@workSummary.Hours
                                </td>
                                <td style="text-align: right">
                                    $@String.Format("{0:0.00}", workSummary.BillableAmount)
                                </td>
                            </tr>
			       
                }
                        }
                    </table>
                </div>
                <div class="col-lg-12 gap-bottom10">
                    <button type="button" class="btn btn-success  pull-right gap-right10" id="btnExport">
                        Export</button>
                </div>
            }
           
        </div>
    </div>
</div>
