@model List<TimeManagement.Models.Task>
@*<script type="text/javascript" src="~/Scripts/TableTools.js"></script>*@
<script type="text/javascript">
    var oTable;
    function showexport() {
        $("#export").show();
    }
    function datevalidate() {
        var fromdate = $('#fromdate').val();
        var todate = $('#todate').val();

        if ((Date.parse(fromdate) > Date.parse(todate))) {
            alert("To Date should be greater than From date.");
            document.getElementById("todate").value = "";
            return false;
        }

        return true;

    }


    $(document).ready(function () {

        $("#export").hide();
        //.export {display:none}

        //Export button click event on batch list page
        $("#btnExport").click(function () {
            location.href = '@Url.Content("~/Report/ExportTaskDetails")';
        });

       // $('#location').selectpicker({ noneSelectedText: 'Select Location' });
        //$('#project').selectpicker({ noneSelectedText: 'Select Project' });
        //$('#workcode').selectpicker({ noneSelectedText: 'Select Work Code' });

        $("#fromdate").change(function () {
            var fromdate = $('#fromdate').val();
            if (fromdate == "") {
                $('#fdate').removeClass('hidden');
                return false;
            } else if (fromdate != "") {
                $('#fdate').addClass('hidden');
                return false;
            }
            return true;

        });

        $("#todate").change(function () {
            var todate = $('#todate').val();
            if (todate == "") {
                $('#tdate').removeClass('hidden');
                return false;
            } else if (todate != "") {
                $('#tdate').addClass('hidden');
                return false;
            }
            return true;

        });

        $("#employee").select2({
            sorter: employee_id => employee_id.sort((a, b) => a.text.localeCompare(b.text)),
            placeholder: "Select Employee",
        });
        $('#project').select2({
            placeholder: "Select Project",
       });
        $('#workcode').select2({
            placeholder: "Select WorkCode",
        });  
        $('#workcodeActivity').select2({
            placeholder: "Select workcodeActivity",
        });
        $("#location").select2({
            placeholder: "Select Location",
        });
    });

    $(document.body).on("change", "#workcode", function () {
        var empid = this.value;
        // $('#WorkCodeActivities').val(null).trigger('change');
       
        if (empid != null) { 
            $('#workcodeActivity').select2({

                ajax: {
                    url: '/Report/GetWorkCodeActivities',
                    data: { id: empid },
                    dataType: 'json',
                    success: function (data) {
                        //$('#WorkCodeActivities').append(data);
                        $('#workcodeActivity').select2({
                            data: data,
                        })
                    }
                }
            })
        }

    });
    function fundate() {
        var fromdate = $('#fromdate').val();
        var todate = $('#todate').val();
        if ((fromdate == "") && (todate == "")) {
            $('#fdate').removeClass('hidden');
            $('#tdate').removeClass('hidden');
            return false;
        } else if ((fromdate != "") && (todate == "")) {
            $('#fdate').addClass('hidden');
            $('#tdate').removeClass('hidden');
            return false;
        } else if ((fromdate == "") && (todate != "")) {
            $('#fdate').removeClass('hidden');
            $('#tdate').addclass('hidden');
            return false;
        }
        if (datevalidate() == false) {
            return false;
        }
        Timebydate(); showexport();

        return true;

    }


    function Timebydate() {
        //$('#location').selectpicker().val()
        //return false;


        var location_l = '';
        $('#location').find('option:selected').each(function () {
            if (location_l != '') {
                location_l = location_l + ','
            }
            location_l = location_l + $(this).val();

        })

        var project_1 = '';
        $('#project').find('option:selected').each(function () {
            if (project_1 != '') {
                project_1 = project_1 + ','
            }
            project_1 = project_1 + $(this).val();

        })

        var workcode_1 = '';
        $('#workcodeActivity').find('option:selected').each(function () {
            if (workcode_1 != '') {
                workcode_1 = workcode_1 + ','
            }
            workcode_1 = workcode_1 + $(this).val();

        })
        var workcodeActivity_1 = '';
        $('#workcodeActivity').find('option:selected').each(function () {
            if (workcodeActivity_1 != '') {
                workcodeActivity_1 = workcodeActivity_1 + ','
            }
            workcodeActivity_1 = workcodeActivity_1 + $(this).val();

        })



        if (oTable) {
            oTable.fnDestroy();
        }
        oTable = $('#timeByDate').dataTable({
            "iDisplayLength": 10,
            "aLengthMenu": [[10, 16, 24, 32, -1], [10, 16, 24, 32, "All"]],
            "bSort": true,
            "bPaginate": true,
            "bFilter": true,
            "bInfo": true,
            "bAutoWidth": false,
            "bProcessing": true,
            // "bRetrieve": true,
            "bServerSide": false,
            "sAjaxSource": '@Url.Content("~/Report/GetTimeByDate")',
            "fnServerParams": function (aoData) {
                aoData.push({ name: 'fromdate', value: $('#fromdate').val() });
                aoData.push({ name: 'toDate', value: $('#todate').val() });
                aoData.push({ name: 'location', value: location_l });
                aoData.push({ name: 'project', value: project_1 });
                aoData.push({ name: 'workcodeActivity', value: workcode_1 });
                aoData.push({ name: 'employee', value: $('#employee').val() });
            },
            "aoColumns": [{ "mData": "LocationName", "sTitle": "Location" }
                                        , { "mData": "EmployeeName", "sTitle": "User Name" }
                                        , { "mData": "Date", "sTitle": "Date", "sClass": "text-center" }
                                         , { "mData": "ProjectName", "sTitle": "Project" }
                                            , { "mData": "WorkCode", "sTitle": "WorkCode" }
                                          , { "mData": "WorkCodeName", "sTitle": "WorkCode Activity" }
                                
                                        , { "mData": "Hours", "sTitle": "Hours", "sClass": "text-center"}
                                        , { "mData": "Description", "sTitle": "Description" }


                                            ]

        });

    }



</script>
<div class="row">
    <div class="boxshade">
        <div class="boxhead">
            Time Entry Report
        </div>
        <div class="boxbody">
            <div class="col-lg-12 pad10 gap-bottom10" style="background-color: #F5F5F5;">
                <div class="col-lg-12 gap-bottom10">
                    @using (Html.BeginForm("GetTimeByDate", "Report", FormMethod.Post))
                    {
                        <div div class="row">
                            <div class="col-lg-2">
                                <div class="col-lg-12 pad0 gap-bottom5">
                                    <b>From Date</b>
                                </div>
                                <div class="col-lg-12 pad0">
                                    <input type="text" id="fromdate" class="form-control datePicker required" placeholder="From"
                                           name="fromDate" />
                                    <div id="fdate" class="hidden">
                                        From Date Required
                                    </div>
                                </div>
                            </div>

                            <div class="col-lg-2">
                                <div class="col-lg-12 pad0 gap-bottom5">
                                    <b>To Date</b>
                                </div>
                                <div class="col-lg-12 pad0">
                                    <input type="text" id="todate" class="form-control datePicker required" placeholder="To"
                                           name="toDate" />
                                    <div id="tdate" class="hidden">
                                        To Date Required
                                    </div>
                                </div>
                            </div>
                        </div>
                        if (User.IsInRole("Administrator"))
                        {
                <div div class="row">

                    <div class="col-lg-2">
                        <div class="col-lg-12 pad0 gap-bottom5">
                            <b>Location</b>
                        </div>
                        <div class="col-lg-12 pad0">
                            @Html.DropDownList("locations", null, " ", new { @class = "form-control", id = "location", multiple = "multiple" })
                        </div>
                    </div>
                    <div class="col-lg-2">
                        <div class="col-lg-12 pad0 gap-bottom5">
                            <b>Project</b>
                        </div>
                        <div class="col-lg-12 pad0">
                            @Html.DropDownList("Projects", null, " ", new { @class = "form-control", id = "project", multiple = "multiple" })
                        </div>
                    </div>
                    <div class="col-lg-2">
                        <div class="col-lg-12 pad0 gap-bottom5">
                            <b>Work Code</b>
                        </div>
                        <div class="col-lg-12 pad0">
                            @Html.DropDownList("WorkCodes", new SelectList(ViewBag.WorkCodes, "key", "Value"), new { @class = "form-control", id = "workcode", multiple = "multiple" })
                        </div>
                    </div>
                    <div class="col-lg-2">
                        <div class="col-lg-12 pad0 gap-bottom5">
                            <b>WorkCode Activity</b>
                        </div>
                        <div class="col-lg-12 pad0">
                            @Html.DropDownList("WorkCodeActivity", null, " ", new { @class = "form-control", id = "workcodeActivity", multiple = "multiple" })
                        </div>
                    </div>
                    <div class="col-lg-2">
                        <div class="col-lg-12 pad0 gap-bottom5">
                            <b>Employee</b>
                        </div>
                        <div class="col-lg-12 pad0">
                            @Html.DropDownList("Employees", null, " ", new { @class = "form-control", id = "employee" })
                        </div>
                    </div>
                </div>
                                }
                                <div class="col-lg-12 gap-top5">
                                    <button type="button" onclick="return fundate();" class="btn btn-info pull-right gap-right10"
                                            id="getreport">
                                        Submit
                                    </button>
                                </div>

                                }
                            </div>
                            <div class="col-lg-12">
                                <span style="font-size: 12px">@ViewBag.Message</span>
                            </div>
                        </div>
            <div class="col-lg-12 gap-bottom10">
                <table id="timeByDate" class="table table-striped table-bordered">
                </table>
                <div class="col-lg-12 gap-bottom10" id="export">
                    <button type="button" class="btn btn-success  pull-right gap-right10" id="btnExport">
                        Export
                    </button>
                </div>
            </div>
        </div>
    </div>
</div>
