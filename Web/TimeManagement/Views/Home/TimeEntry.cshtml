<link href="~/Content/css/select2.min.css" rel="stylesheet" />
<script src="~/Scripts/select2.min.js"></script>
<div class="row">
    <div class="boxshade">
        <div class="boxhead">
            Time Entry Form
        </div>
        <div class="boxbody">
            <div class="col-lg-12 pad10 gap-bottom10" style="background-color: #F5F5F5;">
                <div class="col-lg-1">
                    <div class="col-lg-12 pad0 gap-bottom5">
                        <b>Date</b>
                    </div>
                    <div class="col-lg-12 pad0">
                        <input class="date form-control required" id="date" style="width: 100px !important" data-bind="value:executionDate" />
                        <div id="Date" class="requi">
                            Date is Required
                        </div>
                    </div>
                </div>
                <div class="col-lg-3">
                    <div class="col-lg-12 pad0 gap-bottom5">
                        <b>Project</b>
                    </div>
                    <div class="col-lg-12 pad0">
                        @Html.DropDownList("projects", (IEnumerable<SelectListItem>)ViewBag.Projects, new Dictionary<string, object>
                {
                    {"data-bind", "value:projectId"},
                     {"class", "form-control required"}
                })
                        <div id="project" class="requi">
                            Project is Required
                        </div>
                    </div>
                </div>
                <div class="col-lg-3">
                    <div class="col-lg-12 pad0 gap-bottom5">
                        <b>Work Code</b>
                    </div>
                    <div class="col-lg-12 pad0">
                        @Html.DropDownList("workCodes", (IEnumerable<SelectListItem>)ViewBag.WorkCodes, new Dictionary<string, object>
                {
                    {"data-bind", "value:workCodeId"},
                     {"class", "form-control required"}
                })
                        <div id="workcode" class="requi">
                            Workcode is Required
                        </div>
                    </div>
                </div>
                <div class="col-lg-1">
                    <div class="col-lg-12 pad0 gap-bottom5">
                        <b>Hours</b>
                    </div>
                    <div class="col-lg-12 pad0">
                        <input data-bind="value:hours" class="form-control required" id="hours" />
                        <div id="Hours" class="requi">
                            Hours is Required
                        </div>
                    </div>
                </div>
                <div class="col-lg-2">
                    <div class="col-lg-12 pad0 gap-bottom5">
                        <b>Description </b>
                    </div>
                    <div class="col-lg-12 pad0">
                        <textarea data-bind="value:description" id="description" class="form-control required" style="width: 100%;"
                                  cols="" rows="2"></textarea>
                        <div id="desc" class="requi">
                            Description is Required
                        </div>
                    </div>
                </div>
                <div class="col-lg-2">
                    <div class="col-lg-12 pad0 gap-bottom5">
                        &nbsp;
                    </div>
                    <div class="col-lg-12 pad0">
                        <button id="btnAdd" data-bind="click:addTask" type="button" class="btn btn-info pull-right gap-right10">
                            Add
                        </button>
                        <button id="btnEdit" data-bind="click:editTask" type="button" class="btn btn-info pull-right gap-right10">
                            Save
                        </button>
                        <button id="btnCancel" type="button" class="btn btn-info pull-right gap-right10">
                            Cancel
                        </button>
                    </div>
                </div>
            </div>
            <div class="col-lg-12 pad0">
                <div id="data">
                    <table class="custom table table-striped table-bordered dataTable" id="taskTable">
                        <thead>
                            <tr>
                                <th width="10%">
                                    Date
                                </th>
                                <th width="20%">
                                    Project
                                </th>
                                <th width="20%">
                                    Work Code
                                </th>
                                <th width="5%">
                                    Hours
                                </th>
                                <th width="35%">
                                    Description
                                </th>
                                <th width="10%">
                                    &nbsp;
                                </th>
                            </tr>
                        </thead>
                        <tbody data-bind="template: { name:'activityTableTmpl', foreach:tasks }">
                        </tbody>
                        <tfoot>
                            <tr style="background-color: #2481B7; color: #FFF">
                                <td colspan="3" style="text-align: right">
                                    <b>Total</b>
                                </td>
                                <td>
                                    <div id="total" style="font-weight: bold; text-align: center">
                                    </div>
                                </td>
                                <td colspan="2">
                                </td>
                            </tr>
                        </tfoot>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>
<script id="activityTableTmpl" type="text/html">
    <tr>
        <td data-bind="text:executionDate" style="text-align:center"></td>
        <td data-bind="text:project" style="text-align:left !important"></td>
        <td data-bind="text:workCode" style="text-align:left !important"></td>
        <td data-bind="text:hours" style="text-align:center"></td>
        <td data-bind="text:description" style="text-align:left !important"></td>
        <td>
            <a class="btn btn-info btn-mini" data-bind="click:editTask"><i class="fa-edit"></i></a>
            <a class="btn btn-danger btn-mini" data-bind="click:removeTask"><i class="fa-trash-o"></i></a>
        </td>
    </tr>
</script>
<script type="text/javascript">

    $(document).ready(function () {

        $('#Date').hide();
        $('#project').hide();
        $('#workcode').hide();
        $('#Hours').hide();
        $('#desc').hide();

        $("#projects").select2({
            sorter: data => data.sort((a, b) => a.text.localeCompare(b.text)),
        });

        $("#workCodes").select2({
            sorter: data => data.sort((a, b) => a.text.localeCompare(b.text)),
        });

    });
    function validate() {

        var date = $('#date').val();
        var project = $('#projects').val();
        var workcode = $('#workCodes').val();
        var hours = $('#hours').val();
        var description = $('#description').val();

        if (date == "") {
            $('#Date').show();
            // return false;
        }

        if (project == "") {
            $('#project').show();
            //  return false;
        }

        if (workcode == "") {
            $('#workcode').show();
            //  return false;
        }
        if (hours == "") {
            $('#Hours').show();
            // return false;
        }
        if (description == "") {
            $('#desc').show();
            //  return false;
        }


    }



    $("#date").on('click', function () {
        var date = $('#date').val();
        if (date == "") {
            $('#Date').show();
            $('#Date').hide();
            return false;
        } else {
            $('#Date').hide();
            return false;
        }
        return false;

    });

    $("#projects").on('click', function () {
        var projects = $('#projects').val();
        if (projects == "") {
            $('#project').show();
            return false;
        } else if (projects != "") {
            $('#project').hide();
            return false;
        }
        return false;

    });

    $("#workCodes").on('click', function () {
        var workcode = $('#workCodes').val();
        if (workcode == "") {
            $('#workcode').show();
            return false;
        } else if (workcode != "") {
            $('#workcode').hide();
            return false;
        }
        return false;

    });
    $("#hours").change(function () {
        var hours = $('#hours').val();
        if (hours == "") {
            $('#Hours').show();
            return false;
        } else if (hours != "") {
            $('#Hours').hide();
            return false;
        }
        return false;

    });
    $("#description").change(function () {
        var desc = $('#description').val();
        if (desc == "") {
            $('#desc').show();
            return false;
        } else if (desc != "") {
            $('#desc').hide();
            return false;
        }
        return false;

    });











</script>
<script type="text/javascript">
    var viewModal;


    function task(modal) {

         return {
            id: ko.observable(modal.taskId()),
            executionDate: ko.observable(modal.executionDate()),
            projectId: ko.observable(modal.projectId()),
            project: ko.observable(modal.project()),
            workCodeId: ko.observable(modal.workCodeId()),
            workCode: ko.observable(modal.workCode()),
            hours: ko.observable(parseFloat(modal.hours()).toFixed(2)),
            description: ko.observable(modal.description()),

            removeTask: function () {
                var self = this;

                var r=confirm("Do you want to Delete the selected task?");

                if (r==true)
                {
                    $("#spinner").show();
                    $.ajax({
                        url: "@Url.Content("~/Home/RemoveTask")",
                        type: "POST",
                        data: ko.toJSON({"taskId": this.id()}),
                        contentType: "application/json",
                        success: function(result) {

                            if(result.message == 'success')
                            {
                                $("#spinner").hide();
                                viewModal.tasks.remove(self);

                                //calculateTotal
                                calculateTotal();
                            }
                        }
                    });
                }
            },

            editTask: function() {

                $("#btnAdd").hide();
                $("#btnEdit").show();
                $("#btnCancel").show();

                var self = this;

                viewModal.taskId(self.id());
                viewModal.executionDate(self.executionDate());

                $("#projects option").find('option').removeAttr("selected");
                $("#projects option:contains("+self.project() +")").attr("selected",true);
                viewModal.projectId($("#projects").val());

                $("#workCodes option").find('option').removeAttr("selected");
                $("#workCodes option:contains("+self.workCode() +")").attr("selected",true);
                viewModal.workCodeId($("#workCodes").val());

                viewModal.hours(self.hours());
                viewModal.description(self.description());

                validate();
            }
        };
    }

    function EmployeeModal() {

        var self = this;
        this.taskId = ko.observable();
        this.executionDate = ko.observable()
        this.projectId = ko.observable()
        this.workCodeId = ko.observable();
        this.hours = ko.observable();
        this.description = ko.observable();
        this.tasks = ko.observableArray([]);

        this.workCode = ko.computed(function() {
            return $("#workCodes option[value='" +self.workCodeId() + "']").text();
        });

        this.project = ko.computed(function() {
            return $("#projects option[value='" +self.projectId() + "']").text();
        });

        this.addTask = function() {

            validate();
            var newTask = new task(self);
            $("#spinner").show();
            $.ajax({
                url: "@Url.Content("~/Home/AddTask")",
                type: "POST",
                data: ko.toJSON(newTask),
                contentType: "application/json",
                success: function(result) {
                    $("#spinner").hide();
                    if(result.message == 'success')
                    {
                        newTask.id(result.Id);
                        self.tasks.push(newTask);

                        //calculateTotal
                        calculateTotal();
                        clearDataonadd();

                    }
                }
            });
        };

        this.editTask = function() {

            var updatedTask = new task(self);
            $("#spinner").show();
            $.ajax({
                url: "@Url.Content("~/Home/EditTask")",
                type: "POST",
                data: ko.toJSON(updatedTask),
                contentType: "application/json",
                success: function(result) {
                    $.each(self.tasks(), function(i){
                        var task = self.tasks()[i];
                        if(task.id() == updatedTask.id())
                        {
                            $("#spinner").hide();
                            self.tasks.replace(task, updatedTask);
                            return;
                        }
                    });

                    //calculateTotal
                    calculateTotal();

                    $("#btnAdd").show();
                    $("#btnEdit").hide();
                    $("#btnCancel").hide();
                   // clearData();
                   clearDataonadd();
                }
            });
        };
    }

    $(document).ready(function () {

        $("#spinner").hide();
        $("#data").hide();
        $("#btnEdit").hide();
        $("#btnCancel").hide();

        viewModal = new EmployeeModal();

        //Bind View model
        ko.applyBindings(viewModal);

        //Date Picker
        $(".date").datepicker({
          onSelect: function(dateText) {

            $("#spinner").show();
            $("#btnAdd").show();
            $("#btnEdit").hide();
            $("#btnCancel").hide();
            viewModal.executionDate(dateText);

            $.ajax({
                url: "@Url.Content("~/Home/GetTasks")",
                type: "POST",
                data: ko.toJSON({"executionDate": dateText}),
                contentType: "application/json",
                success: function(result) {
                    $("#spinner").hide();
                    $("#data").show();
                    viewModal.tasks.removeAll();
                    $.each(result, function(i, item) {
                        viewModal.tasks.push(new task(ko.mapping.fromJS(item)));
                    });

                    //calculateTotal
                    calculateTotal();
                }
            });
          }
        });

        //Button Event
        $("#btnCancel").click(function() {
            $("#btnAdd").show();
            $("#btnEdit").hide();
            $("#btnCancel").hide();

            clearData();
        });
    });

function clearData()
{

    $('.date').val("");
    viewModal.taskId("");

    viewModal.projectId("");
    $("#projects option").find('option').removeAttr("selected");
    $("#projects option:first").attr("selected",true);

    viewModal.workCodeId("");
    $("#workCodes option").find('option').removeAttr("selected");
    $("#workCodes option:first").attr("selected",true);

    viewModal.hours("");
    viewModal.description("");
}

function clearDataonadd()
{


    viewModal.taskId("");



    viewModal.workCodeId("");
    $("#workCodes option").find('option').removeAttr("selected");
    $("#workCodes option:first").attr("selected",true);

    viewModal.hours("");
    viewModal.description("");
}

function calculateTotal()
{
    var total=0;

    $.each(viewModal.tasks(), function(i){
        var task = viewModal.tasks()[i];

        total += parseFloat(task.hours());
    });
    $("#total").text(total.toFixed(2));
}
</script>
